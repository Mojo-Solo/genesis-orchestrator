# GENESIS Orchestrator - Production Services
# Phase 4.2: Load balancer and service configuration

# Main Service (Blue-Green Traffic Routing)
apiVersion: v1
kind: Service
metadata:
  name: genesis-orchestrator
  namespace: genesis-production
  labels:
    app: genesis-orchestrator
    environment: production
    component: load-balancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/api/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: LoadBalancer
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
    - name: https
      port: 443
      targetPort: 8000
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    app: genesis-orchestrator
    version: blue  # Default to blue environment
    environment: production
  loadBalancerSourceRanges:
    - 0.0.0.0/0

---
# Blue Environment Service
apiVersion: v1
kind: Service
metadata:
  name: genesis-orchestrator-blue
  namespace: genesis-production
  labels:
    app: genesis-orchestrator
    version: blue
    environment: production
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    app: genesis-orchestrator
    version: blue
    environment: production

---
# Green Environment Service
apiVersion: v1
kind: Service
metadata:
  name: genesis-orchestrator-green
  namespace: genesis-production
  labels:
    app: genesis-orchestrator
    version: green
    environment: production
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
  selector:
    app: genesis-orchestrator
    version: green
    environment: production

---
# Headless Service for StatefulSet Components
apiVersion: v1
kind: Service
metadata:
  name: genesis-orchestrator-headless
  namespace: genesis-production
  labels:
    app: genesis-orchestrator
    environment: production
    component: headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app: genesis-orchestrator
    environment: production

---
# MySQL Service
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: genesis-production
  labels:
    app: mysql
    environment: production
    component: database
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      targetPort: 3306
      protocol: TCP
  selector:
    app: mysql
    environment: production

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: genesis-production
  labels:
    app: redis
    environment: production
    component: cache
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app: redis
    environment: production

---
# Internal API Service (for microservice communication)
apiVersion: v1
kind: Service
metadata:
  name: genesis-orchestrator-internal
  namespace: genesis-production
  labels:
    app: genesis-orchestrator
    environment: production
    component: internal-api
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
    - name: grpc
      port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: genesis-orchestrator
    environment: production
  publishNotReadyAddresses: true