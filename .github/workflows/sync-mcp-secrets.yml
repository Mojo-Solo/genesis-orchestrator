name: Sync MCP Server Secrets

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 0'  # Weekly on Sunday at 2 AM UTC
  push:
    paths:
      - '.github/workflows/sync-mcp-secrets.yml'
      - 'scripts/sync_mcp_secrets.sh'

env:
  GITHUB_ORG: Mojo-Solo

jobs:
  sync-secrets:
    name: Sync Organization Secrets to MCP Servers
    runs-on: ubuntu-latest
    
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup environment
        run: |
          mkdir -p logs backups
          chmod +x scripts/sync_mcp_secrets.sh
      
      - name: Create Zen MCP environment with secrets
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        run: |
          # Create Zen MCP .env file with actual secrets
          cat > zen-mcp/.env << 'EOL'
          # Zen MCP Server Environment - Production Configuration
          # Generated by GitHub Actions: ${{ github.run_id }}
          # Timestamp: $(date -u -Iseconds)
          
          # API Keys from Organization Secrets
          OPENAI_API_KEY=${OPENAI_API_KEY}
          GEMINI_API_KEY=${GEMINI_API_KEY}
          ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
          OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
          
          # Zen MCP Configuration
          DEFAULT_MODEL=auto
          DEFAULT_THINKING_MODE_THINKDEEP=high
          OPENAI_ALLOWED_MODELS=o4-mini,mini,o3-mini
          GOOGLE_ALLOWED_MODELS=flash,pro
          CONVERSATION_TIMEOUT_HOURS=3
          MAX_CONVERSATION_TURNS=20
          LOG_LEVEL=INFO
          COMPOSE_PROJECT_NAME=zen-mcp
          TZ=UTC
          LOG_MAX_SIZE=10MB
          EOL
          
          chmod 600 zen-mcp/.env
      
      - name: Create Serena MCP environment with secrets
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Create Serena MCP .env file
          cat > zen-mcp/serena/.env << 'EOL'
          # Serena MCP Server Environment - Production Configuration
          # Generated by GitHub Actions: ${{ github.run_id }}
          # Timestamp: $(date -u -Iseconds)
          
          # API Keys for Semantic Code Editing
          GOOGLE_API_KEY=${GEMINI_API_KEY}
          ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
          EOL
          
          chmod 600 zen-mcp/serena/.env
      
      - name: Validate configuration
        run: |
          echo "Validating Zen MCP configuration..."
          if [[ -f "zen-mcp/.env" ]]; then
            echo "✓ Zen MCP .env created successfully"
            echo "✓ File permissions: $(stat -c "%a" zen-mcp/.env)"
          fi
          
          echo "Validating Serena MCP configuration..."
          if [[ -f "zen-mcp/serena/.env" ]]; then
            echo "✓ Serena MCP .env created successfully"
            echo "✓ File permissions: $(stat -c "%a" zen-mcp/serena/.env)"
          fi
      
      - name: Test MCP Server startup (optional)
        continue-on-error: true
        run: |
          echo "Testing MCP server configurations..."
          # Add any startup tests here
          echo "Configuration validated successfully"
      
      - name: Commit updated configurations
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action - MCP Secrets Sync"
          
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add zen-mcp/.env zen-mcp/serena/.env
            git commit -m "chore: sync MCP server secrets from organization

            🔐 Updated by locksmith-auth-enforcer system
            🤖 Generated with GitHub Actions
            
            Co-Authored-By: GitHub Actions <action@github.com>"
            git push
          fi

