apiVersion: v1
kind: ServiceAccount
metadata:
  name: genesis-orchestrator
  namespace: genesis-orchestrator
  labels:
    app: genesis-orchestrator
    component: rbac
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/genesis-orchestrator-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: genesis-orchestrator
  name: genesis-orchestrator-role
  labels:
    app: genesis-orchestrator
    component: rbac
rules:
# Allow reading config maps and secrets
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
# Allow reading pods for health checks
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
# Allow reading services
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
# Allow reading events for debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]
# Allow reading persistent volume claims
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: genesis-orchestrator-binding
  namespace: genesis-orchestrator
  labels:
    app: genesis-orchestrator
    component: rbac
subjects:
- kind: ServiceAccount
  name: genesis-orchestrator
  namespace: genesis-orchestrator
roleRef:
  kind: Role
  name: genesis-orchestrator-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: genesis-deployer
  namespace: genesis-orchestrator
  labels:
    app: genesis-orchestrator
    component: deployment
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/genesis-deployer-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: genesis-deployer-role
  labels:
    app: genesis-orchestrator
    component: deployment
rules:
# Deployment management
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Service management
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# ConfigMap and Secret management
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Pod management for health checks
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec"]
  verbs: ["get", "list", "watch", "create", "delete"]
# Job management for migrations
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# HPA management
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# PDB management
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Ingress management
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Namespace management
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Event access for debugging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]
# Metrics access
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: genesis-deployer-binding
  labels:
    app: genesis-orchestrator
    component: deployment
subjects:
- kind: ServiceAccount
  name: genesis-deployer
  namespace: genesis-orchestrator
roleRef:
  kind: ClusterRole
  name: genesis-deployer-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: genesis-monitoring
  namespace: genesis-orchestrator
  labels:
    app: genesis-orchestrator
    component: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: genesis-monitoring-role
  labels:
    app: genesis-orchestrator
    component: monitoring
rules:
# Metrics access
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: genesis-monitoring-binding
  labels:
    app: genesis-orchestrator
    component: monitoring
subjects:
- kind: ServiceAccount
  name: genesis-monitoring
  namespace: genesis-orchestrator
roleRef:
  kind: ClusterRole
  name: genesis-monitoring-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: genesis-backup
  namespace: genesis-orchestrator
  labels:
    app: genesis-orchestrator
    component: backup
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/genesis-backup-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: genesis-orchestrator
  name: genesis-backup-role
  labels:
    app: genesis-orchestrator
    component: backup
rules:
# Pod access for database backups
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["get", "list", "watch", "create"]
# PVC access for backup storage
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]
# Secret access for backup credentials
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Job creation for backup tasks
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: genesis-backup-binding
  namespace: genesis-orchestrator
  labels:
    app: genesis-orchestrator
    component: backup
subjects:
- kind: ServiceAccount
  name: genesis-backup
  namespace: genesis-orchestrator
roleRef:
  kind: Role
  name: genesis-backup-role
  apiGroup: rbac.authorization.k8s.io