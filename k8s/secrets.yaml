apiVersion: v1
kind: Secret
metadata:
  name: genesis-secrets
  namespace: genesis-orchestrator
  labels:
    app.kubernetes.io/name: genesis-orchestrator
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database credentials
  DB_HOST: "mysql-primary.genesis-orchestrator.svc.cluster.local"
  DB_DATABASE: "genesis_production"
  DB_USERNAME: "genesis_user"
  DB_PASSWORD: "${MYSQL_PASSWORD}"
  DB_READ_HOST: "mysql-replica.genesis-orchestrator.svc.cluster.local"
  
  # Redis credentials
  REDIS_HOST: "redis-primary.genesis-orchestrator.svc.cluster.local"
  REDIS_PASSWORD: "${REDIS_PASSWORD}"
  
  # Temporal credentials
  TEMPORAL_HOST: "temporal.genesis-orchestrator.svc.cluster.local:7233"
  TEMPORAL_TLS_CERT: "${TEMPORAL_TLS_CERT}"
  TEMPORAL_TLS_KEY: "${TEMPORAL_TLS_KEY}"
  
  # API Keys
  OPENAI_API_KEY: "${OPENAI_API_KEY}"
  ANTHROPIC_API_KEY: "${ANTHROPIC_API_KEY}"
  PINECONE_API_KEY: "${PINECONE_API_KEY}"
  
  # Security keys
  HMAC_SECRET_KEY: "${HMAC_SECRET_KEY}"
  JWT_SECRET: "${JWT_SECRET}"
  ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
  
  # Vault configuration
  VAULT_URL: "${VAULT_URL}"
  VAULT_TOKEN: "${VAULT_TOKEN}"
  VAULT_ROLE_ID: "${VAULT_ROLE_ID}"
  VAULT_SECRET_ID: "${VAULT_SECRET_ID}"
  
  # Monitoring credentials
  GRAFANA_ADMIN_PASSWORD: "${GRAFANA_ADMIN_PASSWORD}"
  GRAFANA_SECRET_KEY: "${GRAFANA_SECRET_KEY}"
  
  # Alert manager
  SLACK_WEBHOOK_URL: "${SLACK_WEBHOOK_URL}"
  EMAIL_USERNAME: "${EMAIL_USERNAME}"
  EMAIL_PASSWORD: "${EMAIL_PASSWORD}"
  EMERGENCY_CONTACT: "${EMERGENCY_CONTACT}"

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: genesis-orchestrator
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
  MYSQL_REPLICATION_PASSWORD: "${MYSQL_REPLICATION_PASSWORD}"

---
apiVersion: v1
kind: Secret
metadata:
  name: temporal-secrets
  namespace: genesis-orchestrator
type: Opaque
stringData:
  TEMPORAL_DB_USER: "temporal"
  TEMPORAL_DB_PASSWORD: "${TEMPORAL_DB_PASSWORD}"

---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secrets
  namespace: genesis-orchestrator
type: kubernetes.io/tls
data:
  tls.crt: ${TLS_CERT_BASE64}
  tls.key: ${TLS_KEY_BASE64}

---
# External secrets operator configuration (if using HashiCorp Vault)
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: genesis-orchestrator
spec:
  provider:
    vault:
      server: "${VAULT_URL}"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "genesis-orchestrator"
          serviceAccountRef:
            name: "genesis-orchestrator"

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: genesis-vault-secrets
  namespace: genesis-orchestrator
spec:
  refreshInterval: 300s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: genesis-vault-secrets
    creationPolicy: Owner
  data:
  - secretKey: OPENAI_API_KEY
    remoteRef:
      key: genesis/api-keys
      property: openai_api_key
  - secretKey: ANTHROPIC_API_KEY
    remoteRef:
      key: genesis/api-keys
      property: anthropic_api_key
  - secretKey: PINECONE_API_KEY
    remoteRef:
      key: genesis/api-keys
      property: pinecone_api_key
  - secretKey: HMAC_SECRET_KEY
    remoteRef:
      key: genesis/security
      property: hmac_secret_key
  - secretKey: JWT_SECRET
    remoteRef:
      key: genesis/security
      property: jwt_secret
  - secretKey: ENCRYPTION_KEY
    remoteRef:
      key: genesis/security
      property: encryption_key